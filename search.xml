<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于我的博客的各种个性化设置]]></title>
    <url>%2F2018%2F10%2F17%2F%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%90%84%E7%A7%8D%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[关于我的博客采用的各种个性化设置 内置优化本站采用NEXT主题，以下是我个人做的修改 关于博客页脚爱心logo的更换，以及文字的更改，每篇博客之间分割线的长度的更改，以及优化博客加载速度，我参考了Zcc’s blog的博文，在此感谢。 第三方插件插入本站评论采用gitalk评论系统，配置参考asdfv1929的方法，部分问题参考liujunzhou的文章解决。 在文章中添加，其他页面出现评论框同样可参考此处解决。 1234567---title: tagsdate: 2018-10-11 20:16:31type: "tags"toc: true # 文章目录comments: false # 添加这段话可以开启或者关闭评论--- 以下是我曾经参照的博客链接点击跳转不错的一篇博文，很全面，解决了我很多问题，在此感谢Christmas。点击跳转同样很不错的一篇博文，询问了一些问题博主也给予我解答了在此感谢Moorez点击跳转此文章详细介绍了如何修改配置文章，以及配置文章的功能，在此感谢海天心Y2kking点击跳转不错的一篇博文，很全面，解决了我很多问题，在此感谢夏末]]></content>
      <categories>
        <category>Hexo学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo遇到的问题]]></title>
    <url>%2F2018%2F10%2F17%2F%E5%88%97%E5%87%BA%E4%B8%80%E4%BA%9B%E6%9C%AC%E4%BA%BA%E4%BD%BF%E7%94%A8hexo%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[使用hexo遇到的问题 列举一些曾经困扰到我的hexo问题，希望能帮助更多新人。 Hexo 部署到 Github Pages 文件夹大小写问题我是参考作者Yizhao的Hexo 部署到 Github Pages 文件夹大小写问题注意：我只参照了这一句，了进入到博客项目中 .deploy_git文件夹，修改 .git 下的 config 文件，将 ignorecase=true 改为 ignorecase=false 。最后成功解决问题，感谢。 以后遇到问题会更新此文章。]]></content>
      <categories>
        <category>Hexo学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在hexo中插入本地图片]]></title>
    <url>%2F2018%2F10%2F17%2F%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E4%B8%AD%E6%8F%92%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[在Hexo中插入本地图片 Hexo配置文件的设置确保你的Hexo的配置文件_config.yml里面有个这个选项配置，并将其置为truepost_asset_folder: true这个功能实际上是Hexo官方文档中提到的资源文件夹功能，它的作用在于当你使用hexo new生成一篇新文章时，会在\source\_posts目录下生成一个文章名.md文件，同时附带生成一个与文章名同名的文件夹，可以用它来存放这篇文章的所有资源，比如图片，附件等 安装hexo-asset-image插件你需要安装一个图片路径转换的插件，这个插件名字是hexo-asset-image，我目前安装的是最新的0.03版本，使用如下命令安装插件1npm install hexo-asset-image --save 插件安装完以后，实际上是存放在下面的目录文件夹下\blog\node_modules\hexo-asset-image想要卸载这个插件怎么处理，我听说直接删掉这个文件夹。想删除的可以试试。 插入图片由于每个md文件都有对应的一个资源文件夹，因此，你首先要把需要插入的图片放到这个资源文件夹下，然后进行路径引用.示例：输入此内容![Hexo](/hexo插入本地图片/Hexo.png)出现下面的内容 生成测试在很多网友的文章中，这么做就可以了，你可以尝试一下生成并本地测试，看看是否博客的首页及博文的正文页都能够正确显示图片，或者打开博文生成的html源文件，找到图片插入的地方看看src路径是否是对应public后的绝对路径，如下示例这样 &lt;p&gt;&lt;img src=&quot;/2018/10/16/hexo插入本地图片/Hexo.png&quot; alt=&quot;Hexo&quot;&gt;&lt;/p&gt; 其他方法本地source中建立img文件夹&lt;img src=”img/图片名.jpg&gt;这个比较方便 图床七牛云需要注册使用 参考文献如有其他问题可以参考下面两个链接参考链接1参考链接2]]></content>
      <categories>
        <category>Hexo学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>本地图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo入门指南(三)]]></title>
    <url>%2F2018%2F10%2F16%2Fhexo%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%973%2F</url>
    <content type="text"><![CDATA[请输入密码：password Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>Hexo学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo入门指南(二)]]></title>
    <url>%2F2018%2F10%2F16%2Fhexo%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%972%2F</url>
    <content type="text"><![CDATA[hexo上传Git&amp;绑定域名 搭建hexo部署到github图文教程 亲测可用超详细使用Hexo+Github一步步搭建属于自己的博客（基础）自建博客系列（三）同时托管到github和coding 参考以上链接，相信你肯定能搭建成功]]></content>
      <categories>
        <category>Hexo学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[其他命令]]></title>
    <url>%2F2018%2F10%2F16%2F%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[其他命令目标 查找文件 find 软链接 ln 打包和压缩 tar 软件安装 apt-get 01. 查找文件 find 命令功能非常强大，通常用来在 特定的目录下 搜索 符合条件的文件 序号 命令 作用 01 find [路径] -name “*.py” 查找指定路径下扩展名是 .py 的文件，包括子目录 如果省略路径，表示在当前文件夹下查找 之前学习的通配符，在使用 find 命令时同时可用 有关 find 的高级使用，在就业班会讲 演练目标 1.搜索桌面目录下，文件名包含 1 的文件 1find -name "*1*" 2.搜索桌面目录下，所有以 .txt 为扩展名的文件 1find -name "*.txt" 3.搜索桌面目录下，以数字 1 开头的文件 1find -name "1*" 02. 软链接 序号 命令 作用 01 ln -s 被链接的源文件 链接文件 建立文件的软链接，用通俗的方式讲类似于 Windows 下的快捷方式 注意： 1.没有-s选项建立的是一个硬链接文件 两个文件占用相同大小的硬盘空间，工作中几乎不会建立文件的硬链接 2.源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用 演练目标 1.将桌面目录下的 01.py 移动到 demo/b/c 目录下 2.在桌面目录下新建01.py的软链接FirstPython 分别使用 相对路径 和 绝对路径 建立 FirstPython 的软链接 3.将 FirstPython 移动到 demo 目录下，对比使用 相对路径 和 绝对路径 的区别 硬链接简介（知道） 在使用 ln 创建链接时，如果没有 -s 选项，会创建一个 硬链接，而不是软链接 硬链接演练 1.在 ~/Desktop/demo 目录下建立 ~/Desktop/demo/b/c/01.py 的硬链接 01_hard 2.使用 ls -l 查看文件的硬链接数（硬链接——有多少种方式可以访问文件或者目录） 3.删除 ~/Desktop/demo/b/c/01.py，并且使用 tree 来确认 demo 目录下的三个链接文件 文件软硬链接的示意图 在 Linux 中，文件名 和 文件的数据 是分开存储的 提示： 在 Linux 中，只有文件的 硬链接数 == 0 才会被删除 使用 ls -l 可以查看一个文件的硬链接的数量 在日常工作中，几乎不会建立文件的硬链接，知道即可 03. 打包压缩 打包压缩 是日常工作中备份文件的一种方式 在不同操作系统中，常用的打包压缩方式是不同的 Windows 常用 rar Mac 常用 zip Linux 常用 tar.gz 3.1 打包 ／ 解包 tar 是 Linux 中最常用的 备份工具，此命令可以 把一系列文件 打包到 一个大文件中，也可以把一个 打包的大文件恢复成一系列文件 tar 的命令格式如下： 12345# 打包文件tar -cvf 打包文件.tar 被打包的文件／路径...# 解包文件tar -xvf 打包文件.tar tar 选项说明 选项 含义 c 生成档案文件，创建打包文件 x 解开档案文件 v 列出归档解档的详细过程，显示进度 f 指定档案文件名称，f 后面一定是 .tar 文件，所以必须放选项最后 注意：f 选项必须放在最后，其他选项顺序可以随意 打包解包演练 删除桌面下的所有内容 在桌面下新建三个空白文件 01.py、02.py、03.py 将这三个文件打一个 py.tar 的包 新建 tar 目录，并且将 py.tar 移动到 tar 目录下 解包 py.tar 3.2 压缩／解压缩1) gzip tar与gzip命令结合可以使用实现文件打包和压缩 tar 只负责打包文件，但不压缩 用 gzip 压缩 tar 打包后的文件，其扩展名一般用 xxx.tar.gz 在 Linux 中，最常见的压缩文件格式就是 xxx.tar.gz 在 tar 命令中有一个选项 -z 可以调用 gzip，从而可以方便的实现压缩和解压缩的功能 命令格式如下： 12345678# 压缩文件tar -zcvf 打包文件.tar.gz 被压缩的文件／路径...# 解压缩文件tar -zxvf 打包文件.tar.gz# 解压缩到指定路径tar -zxvf 打包文件.tar.gz -C 目标路径 选项 含义 -C 解压缩到指定目录，注意：要解压缩的目录必须存在 2) bzip2(two) tar 与 bzip2 命令结合可以使用实现文件 打包和压缩（用法和 gzip 一样） tar 只负责打包文件，但不压缩， 用 bzip2 压缩 tar 打包后的文件，其扩展名一般用 xxx.tar.bz2 在 tar 命令中有一个选项 -j 可以调用 bzip2，从而可以方便的实现压缩和解压缩的功能 命令格式如下： 12345# 压缩文件tar -jcvf 打包文件.tar.bz2 被压缩的文件／路径...# 解压缩文件tar -jxvf 打包文件.tar.bz2 04. 软件安装4.1 通过 apt 安装／卸载软件 apt 是 Advanced Packaging Tool，是 Linux 下的一款安装包管理工具 可以在终端中方便的 安装／卸载／更新软件包 12345678# 1. 安装软件$ sudo apt install 软件包# 2. 卸载软件$ sudo apt remove 软件名# 3. 更新已安装的包$ sudo apt upgrade 安装演练12345# 一个小火车提示$ sudo apt install sl# 一个比较漂亮的查看当前进程排名的软件$ sudo apt install htop 4.2 配置软件源 如果希望在 ubuntu 中安装软件，更加快速，可以通过设置镜像源，选择一个访问网速更快的服务器，来提供软件下载／安装服务 提示：更换服务器之后，需要一个相对比较长时间的更新过程，需要耐心等待。更新完成后，再安装软件都会从新设置的服务器下载软件了 所谓镜像源，就是所有服务器的内容是相同的（镜像），但是根据所在位置不同，国内服务器通常速度会更快一些！ ￼ ￼]]></content>
      <categories>
        <category>Linux学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo入门指南(一)]]></title>
    <url>%2F2018%2F10%2F16%2Fhexo%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%971%2F</url>
    <content type="text"><![CDATA[安装&amp;初始化和配置 首先去官网下载最新版本node.js，下载链接：点击此处安装步骤：点击此处 第一步安装：输入：npm install hexo -g然后检查是否安装成功输入：hexo -v 第二步初始化文件夹:输入：hexo init 第三步安装所需要的组件输入 npm install输入 hexo g 首次体验hexo输入 hexo s 开启服务器，访问该网址，正式体验hexo输入 npm install hexo-deployer-git -save 此步骤安装一个扩展部署成功后访问你的地址：http://用户名.github.io。那么将看到下图表示成功可能出现的问题：页面一直无法跳转，那么可能是端口被占用了。此时我们Ctrl+c停止服务器，接着输入 hexo server -p 端口号 来改变端口号]]></content>
      <categories>
        <category>Hexo学习笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用户权限相关命令]]></title>
    <url>%2F2018%2F10%2F16%2F%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[用户权限相关命令目标 用户 和 权限 的基本概念 用户管理 终端命令 组管理 终端命令 修改权限 终端命令 01. 用户 和 权限 的基本概念1.1 基本概念 用户 是 Linux 系统工作中重要的一环，用户管理包括 用户 与 组 管理 在 Linux 系统中，不论是由本机或是远程登录系统，每个系统都必须拥有一个账号，并且对于不同的系统资源拥有不同的使用权限 在 Linux 中，可以指定 每一个用户 针对 不同的文件或者目录 的 不同权限 对 文件／目录 的权限包括： 权限 英文 缩写 数字代号 读 read r 4 写 write w 2 执行 excute x 1 1.2 组 为了方便用户管理，提出了 组 的概念，如下图所示 ￼ 在实际应用中，可以预先针对 组 设置好权限，然后 将不同的用户添加到对应的组中，从而不用依次为每一个用户设置权限 1.3 ls -l 扩展 ls -l 可以查看文件夹下文件的详细信息，从左到右依次是： 权限，第 1 个字符如果是 d 表示目录 硬链接数，通俗地讲，就是有多少种方式，可以访问到当前目录／文件 拥有者，家目录下 文件／目录 的拥有者通常都是当前用户 组，在 Linux 中，很多时候，会出现组名和用户名相同的情况，后续会讲 大小 时间 名称 ￼ 1.4 chmod 简单使用（重要） chmod 可以修改 用户／组 对 文件／目录 的权限 命令格式如下： 1chmod +/-rwx 文件名|目录名 提示：以上方式会一次性修改 拥有者 / 组 权限，有关 chmod 的高级用法，后续会讲 1.5 超级用户 Linux 系统中的 root 账号通常 用于系统的维护和管理，对操作系统的所有资源 具有所有访问权限 在大多数版本的 Linux 中，都不推荐 直接使用 root 账号登录系统 在 Linux 安装的过程中，系统会自动创建一个用户账号，而这个默认的用户就称为“标准用户” sudo su 是 substitute user 的缩写，表示 使用另一个用户的身份 sudo 命令用来以其他身份来执行命令，预设的身份为 root 用户使用 sudo 时，必须先输入密码，之后有 5 分钟的有效期限，超过期限则必须重新输入密码 若其未经授权的用户企图使用 sudo，则会发出警告邮件给管理员 02. 组管理 终端命令 提示：创建组 / 删除组 的终端命令都需要通过 sudo 执行 序号 命令 作用 01 groupadd 组名 添加组 02 groupdel 组名 删除组 03 cat /etc/group 确认组信息 04 chgrp -R 组名 文件/目录名 递归修改文件/目录的所属组 提示： 组信息保存在 /etc/group 文件中 /etc 目录是专门用来保存 系统配置信息 的目录 ￼ 在实际应用中，可以预先针对 组 设置好权限，然后 将不同的用户添加到对应的组中，从而不用依次为每一个用户设置权限 演练目标 在 python 用户的桌面文件夹下创建 Python学习 目录 新建 dev 组 将 Python学习 目录的组修改为 dev 03. 用户管理 终端命令 提示：创建用户 / 删除用户 / 修改其他用户密码 的终端命令都需要通过 sudo 执行 3.1 创建用户／设置密码／删除用户 序号 命令 作用 说明 01 useradd -m -g 组 新建用户名 添加新用户 -m 自动建立用户家目录 -g 指定用户所在的组，否则会建立一个和同名的组 02 passwd 用户名 设置用户密码 如果是普通用户，直接用 passwd 可以修改自己的账户密码 03 userdel -r 用户名 删除用户 -r 选项会自动删除用户家目录 04 cat /etc/passwd \ grep 用户名 确认用户信息 新建用户后，用户信息会保存在 /etc/passwd 文件中 提示： 创建用户时，如果忘记添加 -m 选项指定新用户的家目录 —— 最简单的方法就是删除用户，重新创建 创建用户时，默认会创建一个和用户名同名的组名 用户信息保存在 /etc/passwd 文件中 3.2 查看用户信息 命令 作用 id [用户名] 查看用户 UID 和 GID 信息 who 查看当前所有登录的用户列表 whoami 查看当前登录用户的账户名 passwd 文件/etc/passwd 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是 用户名 密码（x，表示加密的密码） UID（用户标识） GID（组标识） 用户全名或本地帐号 家目录 登录使用的 Shell，就是登录之后，使用的终端命令，ubuntu 默认是 dash usermod usermod 可以用来设置 用户 的 主组 ／ 附加组 和 登录 Shell，命令格式如下： 主组：通常在新建用户时指定，在 etc/passwd 的第 4 列 GID 对应的组 附加组：在 etc/group 中最后一列表示该组的用户列表，用于指定 用户的附加权限 提示：设置了用户的附加组之后，需要重新登录才能生效！ 12345678# 修改用户的主组（passwd 中的 GID）usermod -g 组 用户名# 修改用户的附加组usermod -G 组 用户名# 修改用户登录 Shellusermod -s /bin/bash 用户名 注意：默认使用 useradd 添加的用户是没有权限使用 sudo 以 root 身份执行命令的，可以使用以下命令，将用户添加到 sudo 附加组中 1usermod -G sudo 用户名 which（重要） 提示 /etc/passwd 是用于保存用户信息的文件 /usr/bin/passwd 是用于修改用户密码的程序 which 命令可以查看执行命令所在位置，例如： 123456789which ls# 输出# /bin/lswhich useradd# 输出# /usr/sbin/useradd bin 和 sbin 在 Linux 中，绝大多数可执行文件都是保存在 /bin、/sbin、/usr/bin、/usr/sbin /bin（binary）是二进制执行文件目录，主要用于具体应用 /sbin（system binary）是系统管理员专用的二进制代码存放目录，主要用于系统管理 /usr/bin（user commands for applications）后期安装的一些软件 /usr/sbin（super user commands for applications）超级用户的一些管理程序 提示： cd 这个终端命令是内置在系统内核中的，没有独立的文件，因此用 which 无法找到 cd 命令的位置 3.3 切换用户 序号 命令 作用 说明 01 su - 用户名 切换用户，并且切换目录 - 可以切换到用户家目录，否则保持位置不变 02 exit 退出当前登录账户 su 不接用户名，可以切换到 root，但是不推荐使用，因为不安全 exit 示意图如下： ￼ 04. 修改文件权限 序号 命令 作用 01 chown 修改拥有者 02 chgrp 修改组 03 chmod 修改权限 命令格式如下： 12345678# 修改文件|目录的拥有者chown 用户名 文件名|目录名# 递归修改文件|目录的组chgrp -R 组名 文件名|目录名# 递归修改文件权限chmod -R 755 文件名|目录名 chmod 在设置权限时，可以简单地使用三个数字分别对应 拥有者 ／ 组 和 其他 用户的权限 12# 直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他chmod +/-rwx 文件名|目录名 ￼ 常见数字组合有（ 1u 表示用户／ 1g 表示组／ 1o 表示其他）： 777 ===&gt; u=rwx,g=rwx,o=rwx 755 ===&gt; u=rwx,g=rx,o=rx 644 ===&gt; u=rw,g=r,o=r chmod 演练目标 将 01.py 的权限修改为 u=rwx,g=rx,o=r 将 123.txt 的权限修改为 u=rw,g=r,o=- 将 test 目录以及目录下的 所有 文件权限修改为 u=rwx,g=rwx,o=rx]]></content>
      <categories>
        <category>Linux学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[系统信息相关命令]]></title>
    <url>%2F2018%2F10%2F16%2F%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[系统信息相关命令 本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前 系统日期和时间 ／ 磁盘空间占用情况 ／ 程序执行情况 本小结学习的终端命令基本都是查询命令，通过这些命令对系统资源的使用情况有个了解 目标 时间和日期 date cal 磁盘和目录空间 df du 进程信息 ps top kill 01. 时间和日期 序号 命令 作用 01 date 查看系统时间 02 cal calendar 查看日历，-y 选项可以查看一年的日历 02. 磁盘信息 序号 命令 作用 01 df -h disk free 显示磁盘剩余空间 02 du -h [目录名] disk usage 显示目录下的文件大小 选项说明 参数 含义 -h 以人性化的方式显示文件大小 03. 进程信息 所谓 进程，通俗地说就是 当前正在执行的一个程序 序号 命令 作用 01 ps aux process status 查看进程的详细状况 02 top 动态显示运行中的进程并且排序 03 kill [-9] 进程代号 终止指定代号的进程，-9 表示强行终止 ps 默认只会显示当前用户通过终端启动的应用程序 ps 选项说明功能 选项 含义 a 显示终端上的所有进程，包括其他用户的进程 u 显示进程的详细状态 x 显示没有控制终端的进程 提示：使用 kill 命令时，最好只终止由当前用户开启的进程，而不要终止 root 身份开启的进程，否则可能导致系统崩溃 要退出 top 可以直接输入 q]]></content>
      <categories>
        <category>Linux学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用Linux命令的基本使用]]></title>
    <url>%2F2018%2F10%2F16%2F%E5%B8%B8%E7%94%A8%E7%9A%84Linux%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[常用Linux命令的基本使用目标 理解学习 Linux 终端命令的原因 常用 Linux 命令体验 01. 学习 Linux 终端命令的原因 Linux 刚面世时并没有图形界面，所有的操作全靠命令完成，如 磁盘操作、文件存取、目录操作、进程管理、文件权限 设定等 在职场中，大量的 服务器维护工作 都是在 远程 通过 SSH 客户端 来完成的，并没有图形界面，所有的维护工作都需要通过命令来完成 在职场中，作为后端程序员，必须要或多或少的掌握一些 Linux 常用的终端命令 Linux 发行版本的命令大概有 200 多个，但是常用的命令只有 10 多个而已 学习终端命令的技巧： 不需要死记硬背，对于常用命令，用的多了，自然就记住了 不要尝试一次学会所有的命令，有些命令是非常不常用的，临时遇到，临时百度就可以 02. 常用 Linux 命令的基本使用 序号 命令 对应英文 作用 01 ls list 查看当前文件夹下的内容 02 pwd print wrok directory 查看当前所在文件夹 03 cd [目录名] change directory 切换文件夹 04 touch [文件名] touch 如果文件不存在，新建文件 05 mkdir [目录名] make directory 创建目录 06 rm [文件名] remove 删除指定的文件名 07 clear clear 清屏 小技巧 ctrl + shift + 终端字体放大 ctrl shift - 终端字体缩小 03. 自动补全 在敲出文件/目录/命令的前几个字母之后，按下tab 如果输入的没有歧义，系统会自动补全 如果还存在其他 文件／目录／命令，再按一下 tab 键，系统会提示可能存在的命令 小技巧 按 上／下 光标键可以在曾经使用过的命令之间来回切换 如果想要退出选择，并且不想执行当前选中的命令，可以按 ctrl + c cd 返回home目录 cd ~ 返回home目录 cd - 切换最近两次目录之间切换 01.终端命令格式1command [-options] [parameter] 说明： command：命令名，相应功能的英文单词或单词的缩写 [-options]：选项，可用来对命令进行控制，也可以省略 parameter：传给命令的参数，可以是 零个、一个 或者 多个 [] 代表可选 02. 查阅命令帮助信息（知道） 提示 现阶段只需要 知道 通过以下两种方式可以查询命令的帮助信息 先学习常用命令及常用选项的使用即可，工作中如果遇到问题可以借助 网络搜索 2.1 –help1command --help 说明： 显示 command 命令的帮助信息 2.2 man1man command 说明： 查阅 command 命令的使用手册 man 是 manual 的缩写，是 Linux 提供的一个 手册，包含了绝大部分的命令、函数的详细使用说明 使用 man 时的操作键： 操作键 功能 空格键 显示手册页的下一屏 Enter 键 一次滚动手册页的一行 b 回滚一屏 f 前滚一屏 q 退出 /word 搜索 word 字符串]]></content>
      <categories>
        <category>Linux学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[远程管理常用命令]]></title>
    <url>%2F2018%2F10%2F16%2F%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[远程管理常用命令目标 关机/重启 shutdown 查看或配置网卡信息 ifconfig ping 远程登录和复制文件 ssh scp 01. 关机/重启 序号 命令 对应英文 作用 01 shutdown 选项 时间 shutdown 关机／重新启动 1.1 shutdown shutdown 命令可以 安全 关闭 或者 重新启动系统 选项 含义 -r 重新启动 提示： 不指定选项和参数，默认表示 1 分钟之后 关闭电脑 远程维护服务器时，最好不要关闭系统，而应该重新启动系统 常用命令示例 1234567891011121314# 重新启动操作系统，其中 now 表示现在$ shutdown -r now# 立刻关机，其中 now 表示现在$ shutdown now# 系统在今天的 20:25 会关机$ shutdown 20:25# 系统再过十分钟后自动关机$ shutdown +10# 取消之前指定的关机计划$ shutdown -c 02. 查看或配置网卡信息 序号 命令 对应英文 作用 01 ifconfig configure a network interface 查看/配置计算机当前的网卡配置信息 02 ping ip地址 ping 检测到目标 ip地址 的连接是否正常 2.1 网卡 和 IP 地址网卡 网卡是一个专门负责网络通讯的硬件设备 IP 地址是设置在网卡上的地址信息 我们可以把 电脑 比作 电话，网卡 相当于 SIM 卡，IP 地址 相当于 电话号码 IP 地址 每台联网的电脑上都有 IP 地址，是保证电脑之间正常通讯的重要设置 注意：每台电脑的 IP 地址不能相同，否则会出现 IP 地址冲突，并且没有办法正常通讯 提示：有关 IP 地址的详细内容，在就业班会详细讲解！ 2.2 ifconfig ifconfig 可以查看／配置计算机当前的网卡配置信息 12345# 查看网卡配置信息$ ifconfig# 查看网卡对应的 IP 地址$ ifconfig | grep inet 提示：一台计算机中有可能会有一个 物理网卡 和 多个虚拟网卡，在 Linux 中物理网卡的名字通常以 ensXX 表示 127.0.0.1 被称为 本地回环/环回地址，一般用来测试本机网卡是否正常 2.3 ping12345# 检测到目标主机是否连接正常$ ping IP地址# 检测本地网卡工作正常$ ping 127.0.0.1 ping 一般用于检测当前计算机到目标计算机之间的网络 是否通畅，数值越大，速度越慢 ping 的工作原理与潜水艇的声纳相似，ping 这个命令就是取自 声纳的声音 网络管理员之间也常将 ping 用作动词 —— ping 一下计算机X，看他是否开着 原理：网络上的机器都有 唯一确定的 IP 地址，我们给目标 IP 地址发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在 提示：在 Linux 中，想要终止一个终端程序的执行，绝大多数都可以使用 CTRL + C 03. 远程登录和复制文件 序号 命令 对应英文 作用 01 ssh 用户名@ip secure shell 关机／重新启动 02 scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径 secure copy 远程复制文件 3.1 ssh 基础（重点）在 Linux 中 SSH 是 非常常用 的工具，通过 SSH 客户端 我们可以连接到运行了 SSH 服务器 的远程机器上 ￼ SSH 客户端是一种使用 Secure Shell（SSH） 协议连接到远程计算机的软件程序 1SSH 是目前较可靠， 专为远程登录会话和其他网络服务 提供安全性的协议 利用 SSH 协议 可以有效防止远程管理过程中的信息泄露 通过 SSH 协议 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗 SSH 的另一项优点是传输的数据可以是经过压缩的，所以可以加快传输的速度 1) 域名 和 端口号域名 由一串 用点分隔 的名字组成，例如：www.itcast.cn 是 IP 地址 的别名，方便用户记忆 端口号 IP 地址：通过 IP 地址 找到网络上的 计算机 端口号：通过 端口号 可以找到 计算机上运行的应用程序 SSH 服务器 的默认端口号是 22，如果是默认端口号，在连接的时候，可以省略 常见服务端口号列表： 序号 服务 端口号 01 SSH 服务器 22 02 Web 服务器 80 03 HTTPS 443 04 FTP 服务器 21 提示：有关 端口号的详细内容，在就业班会详细讲解！ 2) SSH 客户端的简单使用1ssh [-p port] user@remote user 是在远程机器上的用户名，如果不指定的话默认为当前用户 remote 是远程机器的地址，可以是 IP／域名，或者是 后面会提到的别名 port 是 SSH Server 监听的端口，如果不指定，就为默认值 22 提示： 使用 exit 退出当前用户的登录 注意： ssh 这个终端命令只能在 Linux 或者 UNIX 系统下使用 如果在 Windows 系统中，可以安装 PuTTY 或者 XShell 客户端软件即可 提示： 在工作中，SSH 服务器的端口号很有可能不是 22，如果遇到这种情况就需要使用 -p 选项，指定正确的端口号，否则无法正常连接到服务器 3) Windows 下 SSH 客户端的安装 Putty下载链接 Xshell下载链接 注意选择免费版本下载 建议从官方网站下载正式的安装程序 3.2 scp（掌握） scp 就是 secure copy，是一个在 Linux 下用来进行 远程拷贝文件 的命令 它的地址格式与 ssh 基本相同，需要注意的是，在指定端口时用的是大写的 -P 而不是小写的 ￼ 12345678910111213# 把本地当前目录下的 01.py 文件 复制到 远程 家目录下的 Desktop/01.py# 注意：`:` 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径scp -P port 01.py user@remote:Desktop/01.py# 把远程 家目录下的 Desktop/01.py 文件 复制到 本地当前目录下的 01.pyscp -P port user@remote:Desktop/01.py 01.py# 加上 -r 选项可以传送文件夹# 把当前目录下的 demo 文件夹 复制到 远程 家目录下的 Desktopscp -r demo user@remote:Desktop# 把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹scp -r user@remote:Desktop demo 选项 含义 -r 若给出的源文件是目录文件，则 scp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名 -P 若远程 SSH 服务器的端口不是 22，需要使用大写字母 -P 选项指定端口 注意： scp 这个终端命令只能在 Linux 或者 UNIX 系统下使用 如果在 Windows 系统中，可以安装 PuTTY，使用 pscp 命令行工具或者安装 FileZilla 使用 FTP 进行文件传输 FileZilla 官方网站：传送门 FileZilla 在传输文件时，使用的是 FTP 服务 而不是 SSH 服务，因此端口号应该设置为 21 3.3 SSH 高级（知道） 免密码登录 配置别名 提示：有关 SSH 配置信息都保存在用户家目录下的 .ssh 目录下 1）免密码登录步骤 配置公钥 执行 ssh-keygen 即可生成 SSH 钥匙，一路回车即可 上传公钥到服务器 执行 ssh-copy-id -p port user@remote，可以让远程服务器记住我们的公钥 示意图￼ 非对称加密算法 使用 公钥 加密的数据，需要使用 私钥 解密 使用 私钥 加密的数据，需要使用 公钥 解密 2) 配置别名每次都输入 ssh -p port user@remote，时间久了会觉得很麻烦，特别是当 user, remote 和 port 都得输入，而且还不好记忆 而 配置别名 可以让我们进一步偷懒，譬如用：ssh mac 来替代上面这么一长串，那么就在 ~/.ssh/config 里面追加以下内容： 1234Host mac HostName ip地址 User itheima Port 22 保存之后，即可用 ssh mac 实现远程登录了，scp 同样可以使用]]></content>
      <categories>
        <category>Linux学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文件和目录常用命令]]></title>
    <url>%2F2018%2F10%2F16%2F%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[文件和目录常用命令目标 查看目录内容 ls 切换目录 cd 创建和删除操作 touch rm mkdir 拷贝和移动文件 cp mv 查看文件内容 cat more grep 其他 echo 重定向 &gt; 和 &gt;&gt; 管道 | 01. 查看目录内容1.1 终端实用技巧1&gt; 自动补全在敲出文件/目录/命令的前几个字母之后，按下tab 如果输入的没有歧义，系统会自动补全 如果还存在其他 文件／目录／命令，再按一下 tab 键，系统会提示可能存在的命令 2&gt; 曾经使用过的命令 按 上／下 光标键可以在曾经使用过的命令之间来回切换 如果想要退出选择，并且不想执行当前选中的命令，可以按 ctrl + c 1.2 ls 命令说明 ls 是英文单词 list 的简写，其功能为列出目录的内容，是用户最常用的命令之一，类似于 DOS 下的 dir 命令 Linux 下文件和目录的特点 Linux 文件 或者 目录 名称最长可以有 256 个字符 以 . 开头的文件为隐藏文件，需要用 -a 参数才能显示 . 代表当前目录 .. 代表上一级目录 1.3 ls 常用选项 参数 含义 -a 显示指定目录下所有子目录与文件，包括隐藏文件 -l 以列表方式显示文件的详细信息 -h 配合 -l 以人性化的方式显示文件大小 -alh 显示隐藏文件和信息 计算机中文件大小的表示方式（科普） 单位 英文 含义 字节 B（Byte） 在计算机中作为一个数字单元，一般为 8 位二进制数 千 K（Kibibyte） 1 KB = 1024 B，千字节 （1024 = 2 ** 10） 兆 M（Mebibyte） 1 MB = 1024 KB，百万字节 千兆 G（Gigabyte） 1 GB = 1024 MB，十亿字节，千兆字节 太 T（Terabyte） 1 TB = 1024 GB，万亿字节，太字节 拍 P（Petabyte） 1 PB = 1024 TB，千万亿字节，拍字节 艾 E（Exabyte） 1 EB = 1024 PB，百亿亿字节，艾字节 泽 Z（Zettabyte） 1 ZB = 1024 EB，十万亿亿字节，泽字节 尧 Y（Yottabyte） 1 YB = 1024 ZB，一亿亿亿字节，尧字节 1.4 ls 通配符的使用 通配符 含义 * 代表任意对个字符,示例l如ls 1*1.txt ？ 代表任意一个字符，只能是一个。示例ls 1?1.txt [] 表示可以匹配字符组中的任意一个。示例 ls [1-3]23.txt [abc] 匹配 a、b、c 中的任意一个 [a-f] 匹配从 a 到 f 范围内的的任意一个字符 02. 切换目录2.1 cd cd 是英文单词 change directory 的简写，其功能为更改当前的工作目录，也是用户最常用的命令之一 注意：Linux 所有的 目录 和 文件名 都是大小写敏感的 命令 含义 cd 切换到当前用户的主目录(/home/用户目录) cd ~ 切换到当前用户的主目录(/home/用户目录) cd . 保持在当前目录不变 cd .. 切换到上级目录 cd - 可以在最近两次工作目录之间来回切换 2.2 相对路径和绝对路径 相对路径 在输入路径时，最前面不是 / 或者 ~，表示相对 当前目录 所在的目录位置 绝对路径 在输入路径时，最前面是 / 或者 ~，表示从 根目录/家目录 开始的具体目录位置 03.创建和删除操作3.1 touch 创建文件或修改文件时间 touch[文件名] touch 如果文件不存在，创建新文件 如果已存在，可以修改文件的末次修改日期 3.2 mkdir 创建一个新的目录 选项 含义 -p 可以递归创建目录 示例：mkdir -p a1/b1/c1/d1 注意：新建目录的名称不能与当前目录中已有的文件夹或文件同名 3.3 rm 删除文件或目录 使用rm命令要小心 因为删除文件后 无法恢复(谨慎使用) 选项 含义 -f 强制删除，忽略不存在的文件，无需提示 -r 递归地删除目录下的内容，删除文件夹 时必须加此参数 rm -r [文件名] 删除指定的文件夹名 rm *1.txt 删除以1 结尾的文件 rm -* 删除全部信息（不要在根目录下使用，会导致系统崩溃） 04.拷贝和移动文件 命令 对应英文 作用 tree [目录名] tree 以树状图列出文件目录结构 cp 源文件 目标文件 copy 复制文件或者目录 mv 源文件 目标文件 move 移动文件或者目录／文件或者目录重命名 4.1 tree tree命令可以以树状图列出文件目录结构 | 选项 | 含义 || :–: | :——–: || -d | 只显示目录 | 4.2 cp cp命令的功能是将给出的文件或者目录复制移动到另一个文件或者目录中，相当于DOS下的copy命令 cp ~/Documents/readme.txt ./456.txt 如果需要改名只需要把移动后的地址名字改掉就行 选项 含义 -f 已经存在的目标文件直接覆盖，不会提示 -i 覆盖文件前提示 -r 若给出的源文件是目录名，则cp将递归该目录下的所有子目录和文件，目标文件必须为一个目录名 4.3 mv mv命令可以用来移动文件或目录，也可以文件或目录重命名 | 选项 | 含义 || :–: | :——–: || -i | 覆盖前提示 | 05. 查看文件内容 命令 对应英文 作用 cat 文件名 concatenate 查看文件内容、创建文件、文件合并、追加文件内容等功能 more 文件名 more 分屏显示文件内容 grep 搜索文本 文件名 grep 搜索文本文件内容 5.1 cat cat 命令可以用来 查看文件内容、创建文件、文件合并、追加文件内容 等功能 cat 会一次显示所有的内容，适合 查看内容较少 的文本文件 选项 含义 -b 对非空输出行编号 -n 对输出的所有行编号 Linux 中还有一个nl 的命令和cat -b 的效果更佳 5.2 more more 命令可以用于分屏显示文件内容，每次只显示一页内容 适合于查看内容较多的文本文件 使用more 的操作键 操作键 功能 空格键 显示手册下一页 Enter键 一次滚动手册页的一行 b键 回滚一屏 f键 前滚一屏 q键 退出手册 /word 搜索出word字符串 5.3 grep Linux 系统中grep命令是一种强大的文本搜索工具 grap 允许对文本文件进行模式查找，所谓模式查找，又被成为正则表达式 grep -i &quot;hello python&quot; 注意：查找单词时要加引号 选项 含义 -n 显示匹配行及行号 -v 显示不包括匹配文本的所有行（相当于求反） -i 忽略大小写 常见的两种模式查找 参数 含义 ^a 行首，搜寻以a开头的行 ke$ 行尾，搜寻以ke结束的行 06. 其他6.1 echo 文字内容 echo 会在终端中显示参数指定的文字，通常会和重定向联合使用 6.2 重定向和 &gt; 和 &gt;&gt; Linux允许将命令执行结果重定向到一个文件 将本应显示在终端上的内容输出/追加到指定文件中 其中 &gt;表示输出，会覆盖文件原有的内容 &gt;&gt;表示追加，会将内容追加到已有文件的末尾 6.3 管道 | Linux 允许将一个命令的输出可以通过管道作为另一个命令的输入 可以理解显示生活中的管子，管子的一头塞东西进去，另一头取出来，这里|的左右分为两端，左端塞东西（写），右端取东西（读） 常用的管道命令有： more 分屏显示内容 grep 在命令执行结果的基础上查询指定的文本 示例： ls -lha ~ |more由于家目录下文件不够加-a查看隐藏文件，使用more分页查看 ls -lha ~ |grep Do 显示出家目录下包含Do文件的文件]]></content>
      <categories>
        <category>Linux学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown基础语法]]></title>
    <url>%2F2018%2F10%2F15%2Fmarkdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[记录关于一些关于Markdown的基础语法 markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。 相比WYSIWYG编辑器 优点：1、因为是纯文本，所以只要支持markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而markdown只需要在标题内容前加#即可 缺点：1、需要记一些语法（当然，是很简单。五分钟学会）。2、有些平台不支持markdown编辑模式。 一、标题在想要设置为标题的文字前面加#来表示一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。 注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。 示例： # 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题 效果如下： 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题二、字体加粗要加粗的文字左右分别用两个*号包起来 斜体要倾斜的文字左右分别用一个*号包起来 斜体加粗要倾斜和加粗的文字左右分别用三个*号包起来 删除线要加删除线的文字左右分别用两个~~号包起来 示例： **这是加粗的文字** *这是倾斜的文字*` ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 效果如下： 这是加粗的文字这是倾斜的文字`这是斜体加粗的文字这是加删除线的文字 三、引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个…貌似可以一直加下去，但没神马卵用 示例： &gt;这是引用的内容 &gt;&gt;这是引用的内容 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 效果如下： 这是引用的内容 这是引用的内容 这是引用的内容 四、分割线三个或者三个以上的 - 或者 * 都可以。 示例： --- ---- *** ***** 效果如下： 可以看到，显示效果是一样的。 五、图片语法： ![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。 图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 示例： ![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/ u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;) 效果如下： 上传本地图片直接点击导航栏的图片标志，选择图片即可 六、超链接语法： [超链接名](超链接地址 &quot;超链接title&quot;) title可加可不加 示例： [简书](http://jianshu.com) [百度](http://baidu.com) 效果如下： 简书 百度 注：markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用html语言的a标签代替。 &lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt; 例&lt;a href=&quot;https://www.jianshu.com/u/1f5ac0cf6a8b&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt; 七、列表 无序列表 语法：无序列表用 - + * 任何一种都可以 - 列表内容 + 列表内容 * 列表内容 注意：- + * 跟内容之间都要有一个空格 效果如下： 列表内容 列表内容 列表内容 有序列表语法：数字加点 1.列表内容 2.列表内容 3.列表内容 注意：序号跟内容之间要有空格 效果如下： 1.列表内容2.列表内容3.列表内容 列表嵌套上一级和下一级之间敲三个空格即可 一级无序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容 二级有序列表内容 二级有序列表内容 二级有序列表内容 1.一级有序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 2.一级有序列表内容 二级有序列表内容 二级有序列表内容 二级有序列表内容 八、表格语法： 表头|表头|表头 ---|:--:|---: 内容|内容|内容 内容|内容|内容 第二行分割表头和内容。 - 有一个就行，为了对齐，多加了几个 文字默认居左 -两边加：表示文字居中 -右边加：表示文字居右 注：原生的语法两边都要用 | 包起来。此处省略 效果如下： 姓名 技能 排行 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三弟 九、代码语法：单行代码：代码之间分别用一个反引号包起来 `代码内容` 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 123代码...代码...代码... 注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。 示例： 单行代码 create database hero;代码块 1234function fun()&#123; echo "这是一句非常牛逼的代码";&#125;fun(); 效果如下： 单行代码 create database hero; 代码块 function fun(){ echo &quot;这是一句非常牛逼的代码&quot;; } fun(); 十、流程图 chat st=>start: 开始 op=>operation: My Operation cond=>condition: Yes or No? e=>end st->op->cond cond(yes)->e cond(no)->op &{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git本地仓库与远程仓库关联]]></title>
    <url>%2F2018%2F10%2F15%2Fgit%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E4%B8%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%85%B3%E8%81%94%2F</url>
    <content type="text"><![CDATA[本篇内容介绍关于git本地仓库与远程仓库关联,基于已经安装好git并会基础使用的 第一步：配置SSH KEY默认你已经安装好git客户端，这里我们使用在git bash操作首先输入$ ssh -T git@github.com查看是否连接如果未连接过：再次输入cd ~/.ssh，检查是否存在.ssh的文件夹 如果存在，输入ls，列出该文件下的内容。$ ls id_rsa id-rsa.pub known-hosts 输入ssh-keygen -t rsa -C “你的github邮箱”连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh） 输入eval &quot;$(ssh-agent -s)&quot;添加密钥到ssh-agent 再输入ssh-add ~/.ssh/id_rsa添加生成的SSH key到ssh-agent 再次输入ssh -T git@github.com测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了 第二步：登录GitHub打开”SSH Keys”页面，点击这里 “Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容，确认即可 第三步：在git上创建一个仓库 注意仓库名字要和本地一样(步骤省略)第四步：推送本地工程到github仓库12345678910111213141-git init #本地仓库初始化，执行完后会在工程目录下生成一个.git的隐藏目录2-git add . #添加所有文件到本地索引，命令用法：git add &lt;file&gt;3-git commit -m "My first commit operation" #提交修改到本地仓库，-m选项添加提交注释4-git remote add origin git@github.com:mayouchen123/learngit.git#添加远程仓库地址，保存在origin变量中5-git push origin master #按照前一条命令中origin给定的github地址推送到github仓库的master分支 可能遇到的问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决 首先，清除所有的key-pair12ssh-add -Drm -r ~/.ssh 删除你在github中的public-key 重新生成ssh密钥对ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot; 接下来正常操作在github上添加公钥public-key:1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板2、在github上添加公钥时，直接复制即可3、保存 参考链接]]></content>
      <categories>
        <category>Git学习笔记</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2018%2F10%2F11%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[这是我的第一篇博客你好，朋友！]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到Hexo!！这是你的第一篇文章。查看文档以获取更多信息。如果您在使用Hexo时遇到任何问题，可以在故障排除 中找到答案，或者您可以在GitHub.上询问我。 Quick Start 创建一个新帖子1$ hexo new "我的新帖子" 更多信息 : 写作 运行服务器1$ hexo server 更多信息 : 服务器 生成静态文件1$ hexo generate 更多信息 : 生成 部署到远程站点1$ hexo deploy 更多信息: 部署]]></content>
  </entry>
</search>
